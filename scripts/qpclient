#!/usr/bin/perl -w

use strict;

# QPlot - Publication quality 2D graphs with dual coordinate systems
# Copyright (C) 2014  Daniel Wagenaar
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This nasty perl version is much faster from an sshfs mounted location
# than the original shell version.

use Cwd;

sub usage {
  print STDERR "Usage: qpclient FILE.qpt\n";
  exit 1;
}

my $ifn = shift @ARGV or usage();
usage() if @ARGV;

my $dir = $ifn;
$dir = "." unless $dir =~ s/\/[^\/]*$//;
$dir = "/" if $dir eq "";
$dir = Cwd::cwd() if $dir eq ".";
my $leaf = $ifn;
$leaf =~ s/^.*\///;

my $running = 0;

my $pidfile = "$dir/.qp-$leaf.pid";
if (-f $pidfile) {
  open PID, "<$pidfile" or die;
  my $pid = <PID>;
  close PID;
  chomp $pid;
  if (open PROC, "</proc/$pid/cmdline") {
    while (<PROC>) {
      $running = 1 if /$leaf/;
    }
    close PROC;
  }
}

unless ($running) {
  my $libpath = $ENV{LD_LIBRARY_PATH} || "";
  my @libs = split(/:/, $libpath);
  my @olibs;
  for (@libs) {
    push @olibs, $_ unless $_ =~ /matlab/;
  }
  $ENV{LD_LIBRARY_PATH} = join(":", @olibs);
  if (fork()) {
    # parent
  } else {
    # child
    close STDIN;
    close STDOUT;
    my @args;
    my $qplotbin = $ENV{QPLOT_BINARY} || "qplot";
    push @args, $qplotbin;
    push @args, $ifn;
    exec(@args);
  }
}
