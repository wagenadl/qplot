#!/usr/bin/python3

import sys
import os
import time
import numpy as np

os.chdir("build")

sys.path.append("../../python")
import qplot as qp

egpath = "../source/python-egs"
outpath = "html/pyref"
codepath = "../code"

sys.path.append(codepath)
import qppydoclib as qpd


def imagefns(func):
    '''Returns ifn, pngfn, pdffn
    Returns None if no need/ability to build
    '''
    ifn = f"{egpath}/{func}_eg.py"
    obase = f"{outpath}/{func}"
    pngfn = f"{obase}.png"
    pdffn = f"{obase}.pdf"
    if not os.path.exists(ifn):
        print("No example for", func)
        return None
    if not os.path.exists(pngfn) or not os.path.exists(pdffn):
        return ifn, pngfn, pdffn
    stpy = os.stat(ifn)
    stpng = os.stat(pngfn)
    stpdf = os.stat(pdffn)
    if stpng.st_size==0 or stpdf.st_size==0 \
           or stpy.st_mtime > stpng.st_mtime \
           or stpy.st_mtime > stpdf.st_mtime:
       return ifn, pngfn, pdffn
    return None


def build(func):
    fns = imagefns(func)
    if fns is None:
        return
    print("building example", func)
    ifn, pngfn, pdffn = fns
    with open(ifn) as f:
        txt = f.read()
        txt = "\n".join([line for line in txt.split("\n")
                         if "qp.close" not in line]) # cheat
        exec(txt) # we control these files, so this is safe
        if qp.qi.f:
            if txt.find('shrink')<0:
                qp.shrink(2)
            qp.save(pdffn)
            print("pdf", pdffn)
            qp.save(pngfn, reso=300)
            qp.close()
        else:
            print("No figure - unlinking files")
            if os.path.exists(pngfn):
                os.unlink(pngfn)
            if os.path.exists(pdffn):
                os.unlink(pdffn)
            #os.system(f"touch {pngfn}")
        

def main():
    qp.qi.Figure.interactive(False)
    funcs = qpd.qplotfunctions()
    for func in funcs:
        build(func)


main()        
