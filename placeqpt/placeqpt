#!/usr/bin/perl -w

# QPlot - Publication quality 2D graphs with dual coordinate systems
# Copyright (C) 2014  Daniel Wagenaar
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use strict;


my $doc = <<"EOF";
Commands are:

  FONTPACKAGE latex-package
  FONTSIZE    10pt | 11pt | 12pt
  FONTSTYLE   latex-commands
  PANEL       x y
  LABEL       text [SHIFTED dx dy]
  GRAPHICS    filename [SIZE w h] [SHIFTED dx dy]
  INCLUDE     source.txt

Dimensions may be specified in pt, mm, cm, or in.

EOF
  
my $temppfx = "/tmp/placeqpt-$$"; # Make sure to match chdir command below!
my $out = "placeqpt.pdf";
if (@ARGV) {
  if ($ARGV[0] eq "-o") {
    shift @ARGV;
    $out = shift @ARGV or syntax();
  } elsif ($ARGV[0] =~ s/^-o//) {
    $out = shift @ARGV or syntax();
  } elsif ($ARGV[0] =~ /^--?h/) {
    syntax();
  } else {
    $out = $ARGV[0];
    $out =~ s/\.txt$//;
    $out .= ".pdf";
  }
}

open OUT, ">$temppfx.txt" or die;
print OUT "PREFIX $temppfx\n";
my @input = <>;
output(\@input);
close OUT;

my $here = `pwd`; chomp $here;

$out = "$here/$out" unless $out =~ /^\//;

system("placeqpt.pl < $temppfx.txt > $temppfx.tex") and die "Failed to run placeqpt.pl\n";
chdir("/tmp"); # must match $temppfx above
system("pdflatex $temppfx.tex") and die;
system("mv $temppfx.pdf $out") and die;
system("rm $temppfx.*");
system("rm $temppfx-*.pdf");

sub syntax {
  print STDERR "Usage: placeqpt [-ooutput.pdf] [input.txt]\n";
  print STDERR $doc;
  exit 1;
}

sub output {
  my $input = shift;
  for (@{$input}) {
    chomp;
    if (/^INCLUDE\s+(.*)$/) {
      open IN, "<$1" or die;
      my @input = <IN>;
      close IN;
      output(\@input);
    } else {
      s/#.*//;
      print OUT "$_\n" unless /^\s*$/;
    }
  }
}
